service: coffee-api

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-east-1'} # Default region can be overridden by CLI
  stage: ${opt:stage, 'local'} # Default stage can be overridden by CLI
  environment:
    DYNAMODB_TABLE: Orders-${self:provider.stage}
    API_URL: ${env:API_URL, 'http://localhost:3000/local'} # Fallback value if env var is not set
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:BatchGetItem
          Resource:
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:provider.environment.DYNAMODB_TABLE}
            - Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:provider.environment.DYNAMODB_TABLE}/index/*

functions:
  serveUI:
    handler: lambdas/serveUI/handler.serveUI
    events:
      - http:
          path: "{proxy+}"
          method: get
          cors: true

  placeOrder:
    handler: lambdas/placeOrder/handler.placeOrder
    events:
      - http:
          path: place-order
          method: post
          cors: true

  getOrders:
    handler: lambdas/getOrders/handler.getOrders
    events:
      - http:
          path: get-orders
          method: get
          cors: true

  updateOrder:
    handler: lambdas/updateOrder/handler.updateOrder
    events:
      - http:
          path: update-order/{id}
          method: put
          cors: true

  cancelOrder:
    handler: lambdas/cancelOrder/handler.cancelOrder
    events:
      - http:
          path: cancel-order
          method: delete
          cors: true

resources:
  Resources:
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

  Outputs:
    ApiGatewayUrl:
      Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${self:provider.stage}"
      Description: "The API Gateway URL"

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  dynamodb:
    stages:
      - local
    start:
      noStart: true
